admin=spring,ROLE_VIEWER,ROLE_EDITOR,ROLE_ADMIN
edith=edith,ROLE_EDITOR
vince=vince,ROLE_VIEWER

# 		 	Passwords declared in this file are not encoded. You can find encoded versions of them below.
#			You will need to uncomment the security:password-encoder in security-config.xml and set
#			  hash="sha-256".
#			For each of the users declared at the beginning of this file, replace the password with the 
#			encoded version for the algorithm you picked.
#			After that, re-deploy the web application and try logging in again.
#
#			WARNING: This is just a demo.  In a real application you must use a Salt.
#              See http://www.jasypt.org/howtoencryptuserpasswords.html. To perform all the steps listed
#                you would have to plug-in your own password encoder:
#					<security:password-encoder ref="myencoder"/>
#				 where myencoder is a bean that implements PasswordEncoder.  Since V3.1.4, Spring
#				 Security provides StandardPasswordEncoder which uses sha-256, 1024 iterations and a
#                Salt can be random or passed via constructor.

# SHA-256 - preferred (harder to crack by brute force).
#
#			Encoded version of vince is 08c461ad70fce6c71a9a8e0f824a2f9f54a69db58679f095ea541b2b2419af91
# 			Encoded version of edith is 4cfbf05e4493d17167dbd8ae46b1248d3f3b41ff517bcf60b25bff8a5b206f8c
#			Encoded version of spring is 622a494d3ea8c7ba2fed4f37909f14d9b50ab412322de39be62c8d6c2418bfca
#
#   		To generate another SHA-256 encoded password, there are many generators available online 
#			such as this one: http://www.movable-type.co.uk/scripts/sha256.html



