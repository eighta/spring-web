<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Enables JSR-330 validation -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

	<!-- Defines basic MVC defaults (handler adapter, mapping, date formatting, etc) -->
	<mvc:annotation-driven validator="validator"/>
	
	<!-- 
	  Configures a handler for serving static resources by forwarding to the 
	  Servlet container's default Servlet. 
	-->
	<mvc:default-servlet-handler />

	<!-- Get common stylesheet + images from classpath (see rewards project) -->
	<mvc:resources mapping="/resources/**" location="classpath:/web-resources/" />

	<!-- 
		Interceptors for locale/theme changing and the setting of caching response headers. 
	 	Applied automatically against all handler mappings. 
	 -->
	<mvc:interceptors>
   		<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
   			<property name="cacheSeconds" value="0"/>
   			<property name="supportedMethods"><null/></property>
   		</bean>
	    
	    <!-- TODO-01: Run the application on Tomcat/tc Server.
                        Access the home page at http://localhost:8080/mvc-personalization
	                    Remove any previously deployed applications from your
	                    server to allow for faster startup.
	                  Now, try changing the look to Blue (link at top left).
	                  Nothing happens, but note the URL. -->

	    <!-- TODO-02: Add configuration for a ThemeChangeInterceptor. Try
	                    switiching to Blue now.  You should get an 
	                    exception because we need a new theme-resolver. -->  		
	    
	   	<!-- TODO-06: Do the same for locale. Click on 'FranÃ§ais'. Again nothing
	   	                happens. Note the URL. Add configuration for a
	   	                LocalChangeInterceptor. -->  		
	    
	</mvc:interceptors>
	
	<!-- Define controllers which only render pages (i.e. nothing added to the model) -->
	<mvc:view-controller path="/" view-name="welcome"/>
	<mvc:view-controller path="/home" view-name="welcome"/>

    <!-- TODO-03: Add configuration for a CookieThemeResolver. The server error 
                  should go away, but the look will be the same.  We have set the 
                  theme, but aren't using it.  Open the URL in Firefox and, under
                  the Tools menu, select Web-Developer Extensions -> Cookies ->
                  View Cookie Information.  This cookie should have the value blue:
                  org.springframework.web.servlet.theme.CookieThemeResolver.THEME
                  -->

    <!-- TODO-07: Add configuration for a CookieLocaleResolver. Now you should
                  be able to change everything to French, and back to English. -->

	<!-- Resolves messages to support internationalization -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/messages/global</value>
			</list>
		 </property>
	</bean>

	<!-- Resolves logical view names to Tiles definitions -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="requestContextAttribute" value="requestContext"/>
	</bean>

	<!-- Configures Tiles -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
				<value>/WEB-INF/accounts/tiles.xml</value>
			</list>
		</property>
	</bean>
		
</beans>